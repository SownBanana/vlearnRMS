version: "3"

networks:
  app-network: null

services:
  app:
    build: ./
    ports:
      - 8090:80
    volumes:
      - ./app:/app
    environment:
      - FLASK_APP=app/main.py
      - FLASK_DEBUG=1
      - "RUN=flask run --host=0.0.0.0 --port=80"
    restart: unless-stopped
    networks:
      - app-network

  mysql:
    image: "mysql:5.7.22"
    tty: true
    volumes:
      - ./mysql/dbdata:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    command:
      [
        "--character-set-server=utf8mb4",
        "--collation-server=utf8mb4_unicode_ci",
        "--default-authentication-plugin=mysql_native_password",
        "--disable-partition-engine-check",
      ]
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    ports:
      - "3308:3306"
    networks:
      - app-network
    restart: unless-stopped

  # mysql:
  #   build: mysql
  #   environment:
  #     MYSQL_DATABASE: rmsdb
  #     MYSQL_ROOT_PASSWORD: root
  #     # MYSQL_ROOT_HOST: 0.0.0.0
  #     MYSQL_USER: admin
  #     MYSQL_PASSWORD:
  #   ports:
  #     - "3308:3306"
  #   networks:
  #     - app-network

  # mongodb:
  #   image: mongo:4.0.8
  #   container_name: mongodb
  #   restart: unless-stopped
  #   command: mongod --auth
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME: admin
  #     - MONGO_INITDB_ROOT_PASSWORD:
  #     - MONGO_INITDB_DATABASE: rmsdb
  #     - MONGODB_DATA_DIR: /data/db
  #     - MONDODB_LOG_DIR: /dev/null
  #   volumes:
  #     - mongodbdata:/data/db
  #   networks:
  #     - app-network
